// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WikiGames.Data;

#nullable disable

namespace WikiGames.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220530153241_imgDesarrolladores")]
    partial class imgDesarrolladores
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GeneroJuego", b =>
                {
                    b.Property<int>("GenerosGeneroId")
                        .HasColumnType("int");

                    b.Property<int>("JuegoId")
                        .HasColumnType("int");

                    b.HasKey("GenerosGeneroId", "JuegoId");

                    b.HasIndex("JuegoId");

                    b.ToTable("GeneroJuego");
                });

            modelBuilder.Entity("JuegoModosDeJuego", b =>
                {
                    b.Property<int>("JuegosJuegoId")
                        .HasColumnType("int");

                    b.Property<int>("ModosDeJuegosModosDeJuegoId")
                        .HasColumnType("int");

                    b.HasKey("JuegosJuegoId", "ModosDeJuegosModosDeJuegoId");

                    b.HasIndex("ModosDeJuegosModosDeJuegoId");

                    b.ToTable("JuegoModosDeJuego");
                });

            modelBuilder.Entity("JuegoPersonaje", b =>
                {
                    b.Property<int>("JuegoListJuegoId")
                        .HasColumnType("int");

                    b.Property<int>("PersonajesPersonajeId")
                        .HasColumnType("int");

                    b.HasKey("JuegoListJuegoId", "PersonajesPersonajeId");

                    b.HasIndex("PersonajesPersonajeId");

                    b.ToTable("JuegoPersonaje");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Consola", b =>
                {
                    b.Property<int>("ConsolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsolaId"), 1L, 1);

                    b.Property<string>("ConsolaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("date");

                    b.Property<int>("ImgConsolasId")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.HasKey("ConsolaId");

                    b.HasIndex("ImgConsolasId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Consolas");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Desarrollador", b =>
                {
                    b.Property<int>("DesarrolladorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesarrolladorId"), 1L, 1);

                    b.Property<DateTime?>("Cierre")
                        .HasColumnType("date");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("date");

                    b.Property<string>("DesarrolladorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ImgDesarrolladorId")
                        .HasColumnType("int");

                    b.Property<int?>("ImgDesarrolladoresId")
                        .HasColumnType("int");

                    b.HasKey("DesarrolladorId");

                    b.HasIndex("ImgDesarrolladoresId");

                    b.ToTable("Desarrolladores");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.ImgConsolas", b =>
                {
                    b.Property<int>("ImgConsolasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImgConsolasId"), 1L, 1);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgext")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImgConsolasId");

                    b.ToTable("ImgConsolas");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.ImgDesarrolladores", b =>
                {
                    b.Property<int>("ImgDesarrolladoresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImgDesarrolladoresId"), 1L, 1);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgext")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImgDesarrolladoresId");

                    b.ToTable("ImgDesarrolladores");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Juego", b =>
                {
                    b.Property<int>("JuegoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JuegoId"), 1L, 1);

                    b.Property<string>("Argumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DesarrolladoraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaLanzamientoOficial")
                        .HasColumnType("date");

                    b.Property<string>("JuegoDescription")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JuegoName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PublicadoraId")
                        .HasColumnType("int");

                    b.HasKey("JuegoId");

                    b.HasIndex("DesarrolladoraId");

                    b.HasIndex("PublicadoraId");

                    b.ToTable("Juegos");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.JuegoConsola", b =>
                {
                    b.Property<int>("JuegoId")
                        .HasColumnType("int");

                    b.Property<int>("ConsolaId")
                        .HasColumnType("int");

                    b.Property<int>("CopiasVendidas")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("date");

                    b.HasKey("JuegoId", "ConsolaId");

                    b.HasIndex("ConsolaId");

                    b.ToTable("JuegosConsolas");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaId"), 1L, 1);

                    b.Property<string>("MarcaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.ModosDeJuego", b =>
                {
                    b.Property<int>("ModosDeJuegoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModosDeJuegoId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModosDeJuegoName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModosDeJuegoId");

                    b.ToTable("ModosDeJuegos");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Personaje", b =>
                {
                    b.Property<int>("PersonajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonajeId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsProtagonista")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVillano")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonajeId");

                    b.ToTable("Personaje");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Publicadora", b =>
                {
                    b.Property<int>("PublicadoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicadoraId"), 1L, 1);

                    b.Property<DateTime>("Fundacion")
                        .HasColumnType("date");

                    b.Property<string>("Historia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicadoraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublicadoraId");

                    b.ToTable("Publicadoras");
                });

            modelBuilder.Entity("GeneroJuego", b =>
                {
                    b.HasOne("WikiGames.Models.Entities.Genero", null)
                        .WithMany()
                        .HasForeignKey("GenerosGeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WikiGames.Models.Entities.Juego", null)
                        .WithMany()
                        .HasForeignKey("JuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JuegoModosDeJuego", b =>
                {
                    b.HasOne("WikiGames.Models.Entities.Juego", null)
                        .WithMany()
                        .HasForeignKey("JuegosJuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WikiGames.Models.Entities.ModosDeJuego", null)
                        .WithMany()
                        .HasForeignKey("ModosDeJuegosModosDeJuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JuegoPersonaje", b =>
                {
                    b.HasOne("WikiGames.Models.Entities.Juego", null)
                        .WithMany()
                        .HasForeignKey("JuegoListJuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WikiGames.Models.Entities.Personaje", null)
                        .WithMany()
                        .HasForeignKey("PersonajesPersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Consola", b =>
                {
                    b.HasOne("WikiGames.Models.Entities.ImgConsolas", "imgConsolas")
                        .WithMany()
                        .HasForeignKey("ImgConsolasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WikiGames.Models.Entities.Marca", "Marca")
                        .WithMany("Consola")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("imgConsolas");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Desarrollador", b =>
                {
                    b.HasOne("WikiGames.Models.Entities.ImgDesarrolladores", "ImgDesarrolladores")
                        .WithMany()
                        .HasForeignKey("ImgDesarrolladoresId");

                    b.Navigation("ImgDesarrolladores");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Juego", b =>
                {
                    b.HasOne("WikiGames.Models.Entities.Desarrollador", "Desarrolladora")
                        .WithMany("Juegos")
                        .HasForeignKey("DesarrolladoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WikiGames.Models.Entities.Publicadora", "Publicadora")
                        .WithMany("Juegos")
                        .HasForeignKey("PublicadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desarrolladora");

                    b.Navigation("Publicadora");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.JuegoConsola", b =>
                {
                    b.HasOne("WikiGames.Models.Entities.Consola", "Consola")
                        .WithMany("JuegoConsola")
                        .HasForeignKey("ConsolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WikiGames.Models.Entities.Juego", "Juego")
                        .WithMany("JuegoConsola")
                        .HasForeignKey("JuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consola");

                    b.Navigation("Juego");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Consola", b =>
                {
                    b.Navigation("JuegoConsola");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Desarrollador", b =>
                {
                    b.Navigation("Juegos");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Juego", b =>
                {
                    b.Navigation("JuegoConsola");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Marca", b =>
                {
                    b.Navigation("Consola");
                });

            modelBuilder.Entity("WikiGames.Models.Entities.Publicadora", b =>
                {
                    b.Navigation("Juegos");
                });
#pragma warning restore 612, 618
        }
    }
}
